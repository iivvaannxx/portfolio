---
import type { GetStaticPaths } from "astro";

import Page from "@app/layouts/page.astro";
import { getLocalizedStaticPaths } from "@app/modules/i18n/lib/locales";

import { Canvas } from "@app/components/experience/canvas";

import Hero from "@app/sections/hero.astro";
import Header from "@app/layouts/header.astro";
import Work from "@app/sections/work.astro";

export const getStaticPaths = getLocalizedStaticPaths satisfies GetStaticPaths;

/* const { locale } = Astro.locals;
const formatter = new Intl.DateTimeFormat(locale, {
  month: "long",
  year: "numeric",
}); */
---

<Fragment slot="head">
  <script src="@app/lib/client.ts"></script>
</Fragment>

<Page bodyClass="debug-screens">
  <Header />

  <Canvas client:load />

  <main class="container mx-auto max-w-screen-xl space-y-52 p-20">
    <Hero />

    <Work />

    <!-- <section
      class="mt-48"
      data-scroll-reveal
      data-scroll-away
    >
      <h2 class="my-12 text-3xl font-bold opacity-85">
        Some of my favourite projects
      </h2>

      <ul
        class="space-y-36"
        data-projects-list
      >
        <li data-scroll-reveal>
          <ProjectCard
            name="My Room In 3D"
            headline="A (quite a bit more) fancy replica of my room."
            url="https://my-room.pages.dev"
            description="This was my entry to the 9th edition of the challenges organised by <b>Bruno Simon</b> for the students of his <b>Three.js Journey</b> course. The theme was <i>Isometric Room</i> and even though I had just purchased the course when the challenge was announced, I decided to participate.\n\n Turned out pretty well! It scored the <b>3rd place.</b>."
            relatedSkills={["Blender", "TypeScript", "ThreeJS", "Git"]}
            previewImage={myRoom}
            previewVideo="/videos/my-room/preview.mp4"
          />
        </li>
        <li data-scroll-reveal>
          <ProjectCard
            name="The Gamelab"
            headline="A growing collection of games built with web technologies."
            url="https://thegamelab.dev"
            description="This is a project I started very recently (right now there's only 1 game), but it is something I will be working on from time to time. The idea is to recreate popular games but using only web technologies."
            relatedSkills={["PixiJS", "TypeScript", "Git"]}
            previewImage={theGamelab}
            previewVideo="/videos/gamelab/preview-h264.mp4"
          />
        </li>

        <li data-scroll-reveal>
          <ProjectCard
            name="Tetris"
            headline="A clone of the classic Tetris game."
            url="https://thegamelab.dev"
            description="I made this game while I was in college, as a task for a subject. It was very fun both to make and to play. Although I don't have the source code anymore, I am planning to remake it on Gamelab."
            relatedSkills={["JavaScript", "Phaser"]}
            previewImage={tetris}
            previewVideo="/videos/tetris/preview.mp4"
          />
        </li>
      </ul>

      <p class="my-32 text-base font-semibold text-primary">
        TODO: Add more projects (The Izland, Link Shortener, Home Manager
        Search...) <br />
        <br /> Modal window on click?
      </p>
    </section>

    <section
      class="mt-48"
      data-scroll-reveal
      data-scroll-away
    >
      <h2 class="my-12 text-3xl font-bold opacity-85">
        Which technologies I know?
      </h2>

      <div class="flex w-full gap-32">
        <div class="grid w-1/2 grid-cols-4 items-center gap-8">
          {
            skills.map((skill) => {
              if (
                [
                  "Unity",
                  "Unreal Engine",
                  "Bash",
                  "JavaScript",
                  "C#",
                  "Node",
                  "Deno",
                  "PixiJS",
                  "Phaser",
                  "Blender",
                  "Photoshop",
                  "TailwindCSS",
                ].includes(skill.name) ||
                skill.categories.includes("soft")
              ) {
                // This skills still don't have a 3D icon.
                return null;
              }

              return (
                <div class="aspect-square w-32">
                  <button
                    data-skill-button={skill.name}
                    data-active={`${skill.name === "Astro"}`}
                    class="flex size-full flex-col justify-center rounded-xl border bg-card p-3 text-center transition-colors duration-300 hover:bg-accent data-[active=true]:bg-accent/50"
                  >
                    <Icon
                      name={getIconForSkill(skill.name)}
                      class="size-full p-2 text-center"
                    />
                    <span class="mt-2 block w-full text-sm font-medium">
                      {skill.name}
                    </span>
                  </button>
                </div>
              );
            })
          }
        </div>
        <div class="relative aspect-square w-1/2">
          <SkillView
            className="pointer-events-none absolute inset-0 m-auto size-[80%]"
            client:load
          />
        </div>
      </div>
      <footer>
        <p class="my-16 text-base font-semibold text-primary">
          TODO: Add missing skills and create 3D icons for them.
        </p>
      </footer>
    </section>

    <section
      class="mt-48"
      data-scroll-reveal
      data-scroll-away
    >
      <h2 class="my-12 text-3xl font-bold opacity-85">
        A little more about me
      </h2>
    </section>

    <section class="mt-16 grid grow grid-cols-9 grid-rows-9 gap-4">
      <article
        class="col-span-9 row-span-3 flex flex-col justify-between rounded-xl border bg-card px-8 py-6"
      >
        Random Fact About Me?
      </article>

      <article
        class="col-span-3 row-span-6 rounded-xl border bg-card px-8 py-6"
      >
        Out of Ideas :(
      </article>
      <article
        class="relative col-span-3 row-span-3 flex aspect-square items-end justify-center overflow-clip rounded-xl border bg-card px-8 py-10"
      >
        <CharacterView
          className="pointer-events-none absolute inset-0 -top-8 size-full"
          client:load
        />
        <div
          class="absolute inset-0 top-1/2 z-20 h-1/2 w-full bg-card gradient-mask-t-50"
        >
        </div>

        <footer class="z-30 w-4/5">
          <button
            onclick={'alert("Show Contact Form")'}
            class="relative inline-flex h-12 w-full items-center justify-center gap-4 whitespace-nowrap rounded-md bg-primary px-6 text-base font-bold text-primary-foreground transition will-change-transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 focus:ring-offset-ring"
          >
            <div
              class="absolute -inset-0.5 -z-10 rounded-lg bg-gradient-to-b from-primary/70 to-primary opacity-75 blur"
            >
            </div>

            <Icon
              name="lucide:mail"
              class="size-[1.2em]"
            />
            <span> Get In Touch </span>
          </button>
        </footer>
      </article>
      <section class="col-span-3 row-span-3 grid grid-cols-3 grid-rows-3 gap-4">
        <article
          class="col-span-3 row-span-1 flex items-center justify-center rounded-xl border bg-card px-6"
        >
          <MysteryButton class="h-12 w-4/5 text-lg" />
        </article>

        <article
          class="col-span-3 row-span-2 place-content-center rounded-xl border bg-card"
        >
          <MyTime
            class="h-2/3 w-full"
            locale={Astro.locals.locale}
            client:idle
          />
        </article>
      </section>
      <article
        class="relative col-span-6 row-span-3 rounded-xl border bg-card px-8 py-4"
      >
        Hobbies? Games? Food?
      </article>
    </section> -->
  </main>

  <!--   <Footer /> -->
</Page>

<style>
  main {
    counter-reset: section;
  }

  h2 {
    position: relative;
  }

  h2::before {
    @apply tabular-nums;

    counter-increment: section;
    content: "0" counter(section) ". ";
    opacity: 0.9;

    font-size: 0.8em;
    margin-right: 0.5em;
  }

  h2::after {
    content: "";
    width: 300px;
    height: 2px;

    position: absolute;
    top: calc(50% + 2px);

    display: inline-block;
    margin-left: 0.6em;
    background-color: theme("colors.muted.DEFAULT");
  }
</style>
