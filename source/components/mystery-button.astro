---
import type { HTMLAttributes } from "astro/types";
export type Props = HTMLAttributes<"button">;
---

<script>
  let confetti: typeof import("canvas-confetti");
  let throwingConfetti = false;

  const buttons = document.querySelectorAll("[data-mystery-button]");
  buttons.forEach((button) => {
    button.addEventListener("pointerdown", () => {
      button.classList.add("pressed");
    });
    button.addEventListener("pointerup", () => {
      button.classList.remove("pressed");
    });

    button.addEventListener("click", async () => {
      if (throwingConfetti) {
        return;
      }

      if (!confetti) {
        confetti = (await import("canvas-confetti")).default;
      }

      document.dispatchEvent(new CustomEvent("mystery-button-clicked"));
      throwConfetti(randomInRange(1500, 3500));
    });
  });

  function randomInRange(min: number, max: number) {
    return Math.random() * (max - min) + min;
  }

  function throwConfetti(duration: number) {
    const animationEnd = Date.now() + duration;
    const defaults = { startVelocity: 30, spread: 360, ticks: 60, zIndex: 0 };
    throwingConfetti = true;

    const interval = window.setInterval(function () {
      var timeLeft = animationEnd - Date.now();

      if (timeLeft <= 0) {
        throwingConfetti = false;
        return clearInterval(interval);
      }

      var particleCount = 50 * (timeLeft / duration);
      // since particles fall down, start a bit higher than random
      confetti({
        ...defaults,
        particleCount,
        origin: { x: randomInRange(0.1, 0.3), y: Math.random() - 0.2 },
      });
      confetti({
        ...defaults,
        particleCount,
        origin: { x: randomInRange(0.7, 0.9), y: Math.random() - 0.2 },
      });
    }, 250);
  }
</script>

<button
  data-mystery-button
  {...Astro.props}
  onpointerdown="this.classList.add('pressed')"
  onpointerup="this.classList.remove('pressed')"
  >Mystery Button</button
>

<style>
  button {
    /** Source from: https://www.buttons.cool/button/qBvYdXL */
    background-color: #f0f0f0;
    border: 0;
    color: #242424;
    border-radius: 0.5em;
    padding: 0.375em 1em;
    font-weight: 600;
    text-shadow: 0 0.0625em 0 #fff;
    box-shadow:
      inset 0 0.0625em 0 0 #f4f4f4,
      0 0.0625em 0 0 #efefef,
      0 0.125em 0 0 #ececec,
      0 0.25em 0 0 #e0e0e0,
      0 0.3125em 0 0 #dedede,
      0 0.375em 0 0 #dcdcdc,
      0 0.425em 0 0 #cacaca,
      0 0.425em 0.5em 0 #cecece;
    transition: 0.15s ease;
    pointer: cursor;
  }
  button:active,
  button.pressed {
    translate: 0 0.225em;
    box-shadow:
      inset 0 0.03em 0 0 #f4f4f4,
      0 0.03em 0 0 #efefef,
      0 0.0625em 0 0 #ececec,
      0 0.125em 0 0 #e0e0e0,
      0 0.125em 0 0 #dedede,
      0 0.2em 0 0 #dcdcdc,
      0 0.225em 0 0 #cacaca,
      0 0.225em 0.375em 0 #cecece;
    cursor: pointer;
  }
</style>
