---
import UserLocation from "@app/components/user-location.astro";
import ObservedSection from "@app/layouts/observed-section.astro";
import { getTranslations } from "@app/modules/i18n/lib/translations";
import { Hero } from "@app/modules/three-fiber/components/hero";
import { cn } from "@app/lib/helpers/style";
import { Icon } from "astro-icon/components";

const translations = getTranslations(Astro.locals.locale);
const t = translations.sections.about;
---

<ObservedSection
  id={t.id}
  order={0}
  class="relative flex size-full flex-col"
>
  <div
    id="hero-bg"
    class="absolute inset-0 -z-10 size-full"
  >
  </div>

  <div
    class={cn(
      "container mx-auto grid grid-areas-hero-v grid-cols-hero-v grid-rows-hero-v font-header size-full",
      "xl:grid-areas-hero-h xl:grid-cols-hero-h xl:grid-rows-hero-h xl:items-center xl:p-12",
    )}
  >
    <div
      class="my-auto w-full space-y-4 px-2 pt-2 text-center grid-in-content xs:px-4 xs:pt-4"
    >
      <h1 class="block p-4">
        <span
          class="text-bae block font-semibold text-foreground/50 xs:text-xl lg:text-3xl"
        >
          {t.greeting}
        </span>

        <span
          class="block text-[2.5rem] font-extrabold tracking-wide text-primary xs:text-[3.5rem] lg:text-[7rem]"
        >
          Ivan Porto
        </span>

        <span class="text-xl font-bold xs:text-2xl lg:text-5xl">
          {
            t.headline.content.map((text) => {
              // Because of the split, the placeholder is an empty string
              const isRotatingWords = text === "%s";
              const style = isRotatingWords
                ? "text-foreground"
                : "text-foreground/50";

              return (
                <span class={style}>
                  {isRotatingWords ? t.headline.words.at(-1) : text}
                </span>
              );
            })
          }
        </span>
      </h1>

      <p
        class="text-balance px-2 font-sans text-base font-medium text-foreground/75 xs:px-4 xs:text-lg lg:text-2xl"
      >
        {t.description.p1}
      </p>

      <p
        class="hidden text-balance font-sans text-lg font-medium text-foreground/75 lg:text-2xl"
      >
        {t.description.p2}
      </p>

      <div class="mx-auto flex max-w-[60%] flex-col gap-4 pt-4 xs:max-w-[70%]">
        <button
          id="cta"
          class="inline-flex h-11 items-center justify-center gap-4 rounded-lg border border-border bg-primary px-4 text-[0.95rem] font-medium text-primary-foreground transition hover:scale-110 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 focus:ring-offset-ring xs:h-12 xs:px-6 xs:text-base"
        >
          <span>
            <Icon
              name="lucide:mail"
              class="size-[18px] xs:size-[22px]"
            />
          </span>
          <span> Get In Touch </span>
        </button>
        <a
          href={`#${translations.sections.experience.id}`}
          class="inline-flex h-11 items-center justify-center gap-4 rounded-lg border border-border px-6 font-medium text-foreground transition focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 focus:ring-offset-ring xs:h-12"
        >
          Know Me
        </a>
      </div>
    </div>

    <div class="w-full grid-in-canvas">
      <Hero client:load />
    </div>
  </div>

  <div
    class="absolute bottom-0 right-0 hidden items-center p-12 text-foreground/80 xl:flex"
  >
    <UserLocation class="text-xl font-semibold" />
  </div>
</ObservedSection>

<style>
  section {
    height: calc(100vh - theme("height.header"));
    height: calc(100dvh - theme("height.header"));
  }

  div#hero-bg {
    background: radial-gradient(
      125% 125% at 50% 10%,
      theme("colors.background") 50%,
      theme("colors.background") 100%
    );
  }

  button#cta {
    will-change: transform, color;
    /* background-size: 200% 100%;
    background-image: linear-gradient(
      110deg,
      theme("colors.background"),
      45%,
      theme("colors.accent.DEFAULT"),
      55%,
      theme("colors.background")
    ) */
  }
</style>
