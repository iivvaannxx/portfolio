---
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";
import type { Skill } from "../lib/data/skills";
import SkillBadge from "./skill-badge.astro";
import Link from "./base/link.astro";

type Props = {
  name: string;
  headline: string;
  url: string;

  description: string;
  relatedSkills: Skill[];

  previewImage: ImageMetadata;
  previewVideo: string;
};

const {
  name,
  headline,
  url,
  description,
  relatedSkills,
  previewImage,
  previewVideo,
} = Astro.props;

const videoExtension = previewVideo.split(".").pop();
---

<article
  data-project={name}
  class="group relative grid max-w-screen-lg grid-cols-10 grid-rows-1 gap-8 rounded-xl border"
>
  <div class="col-span-7 flex flex-col justify-between px-10 py-8">
    <header>
      <h3
        class="whitespace-nowrap font-header text-3xl font-semibold text-primary"
      >
        <Link
          href={url}
          label={`Live link to project "${name}" (opens in a new tab).`}
          targetBlank
          withExternalLinkArrow
        >
          <span class="absolute -inset-4 block rounded-lg"></span>
          <span>{name} </span>
        </Link>
      </h3>
      <p class="mt-2 text-pretty text-lg text-foreground">
        {headline}
      </p>
    </header>

    <div class="mt-8 space-y-6">
      <p
        class="whitespace-pre-line text-base text-foreground/70"
        set:html={description}
        data-project-description
      />

      <ul class="flex flex-wrap gap-4">
        {
          relatedSkills.map((skill) => (
            <li>
              <SkillBadge
                skill={skill}
                hoverGlow
              />
            </li>
          ))
        }
      </ul>
    </div>
  </div>

  <div
    class="absolute left-3/4 top-12"
    data-project-preview
  >
    <Image
      data-project-image
      class="pointer-events-none max-w-2xl rounded-xl will-change-transform"
      src={previewImage}
      alt={`Preview image of the project "${name}"`}
    />

    <video
      data-project-video
      width={537}
      height={302}
      class="absolute inset-x-0 bottom-0 mx-auto size-[80%] rounded-xl"
      autoplay
      muted
      loop
      poster={previewImage.src}
      disablepictureinpicture
      playsinline
    >
      <source
        src={previewVideo}
        type={`video/${videoExtension}`}
      />
    </video>
  </div>
</article>

<style>
  [data-project] {
    transition: opacity 0.3s ease-in-out;
  }

  :global([data-project-description] b) {
    color: theme("colors.primary.DEFAULT");
  }

  [data-project-image] {
    position: relative;

    will-change: transform;
    transition:
      opacity 0.3s ease,
      transform 0.3s ease;
  }

  [data-project-video] {
    will-change: transform;
    transition:
      opacity 0.3s ease,
      transform 0.3s ease;

    opacity: 0;
    z-index: 10;
  }

  [data-project-preview]::after {
    content: "";
    inset: 0;
    position: absolute;
    display: block;

    width: calc(100% + 10px);
    height: 100%;
    bottom: 0;

    background-image: linear-gradient(
      to bottom,
      transparent 10%,
      theme("colors.background / 50%") 25%,
      theme("colors.background") 95%
    );

    opacity: 0;
    will-change: transform;
    transition:
      opacity 0.3s ease,
      transform 0.3s ease;
  }

  [data-project]:hover [data-project-preview]::after {
    transform: perspective(250px) rotateX(10deg) translateY(-5%) translateZ(0);
  }

  [data-project]:hover [data-project-image] {
    opacity: 0.8;
    transform: perspective(250px) rotateX(10deg) translateY(-5%) translateZ(0);
  }

  [data-project]:hover [data-project-preview]::after {
    opacity: 1;
  }

  [data-project]:hover [data-project-video] {
    transform: translateY(calc(-10% - 5px));
    opacity: 1;
  }
</style>
