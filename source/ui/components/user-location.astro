---
import type { HTMLAttributes } from "astro/types";
import { useTranslations } from "@app/modules/i18n/lib/hooks/use-translation";

import CircleHelp from "~icons/lucide/circle-help";

// TODO: Serverless function to synchronize last info on each visit.
type Props = HTMLAttributes<"span">;
const t = useTranslations(Astro.locals.locale);
---

<script>
  import { getCurrentLocale } from "@app/modules/i18n/lib/locales";
  import tippy from "tippy.js";

  const response = await fetch("https://geolocation.microlink.io");
  const { country, city } = await response.json();

  const currentLocale = getCurrentLocale();
  const translatedCountry = new Intl.DisplayNames([currentLocale], {
    type: "region",
  });

  const countryName = translatedCountry.of(country.alpha2);

  const userLocation = document.querySelector("div#user-location")!;
  const helpButton = document.querySelector("button#location-privacy-tooltip")!;
  const placeholder = document.querySelector("span#location-placeholder")!;

  userLocation.classList.remove("hidden");
  userLocation.classList.add("flex", "animate-in", "duration-300", "fade-in");
  placeholder.textContent = ` ${city.name}, ${countryName} ${country.flag}`;

  // Sets the tooltip for the privacy notice.
  const template = document.getElementById("privacy-notice");
  tippy(helpButton, {
    content: template?.innerHTML,
    theme: "location",
    offset: [0, 16],

    arrow: false,
    allowHTML: true,
    hideOnClick: false,
    maxWidth: 360,
  });

  template?.remove();
</script>

<div id="user-location" class="hidden gap-4">
  <button
    id="location-privacy-tooltip"
    aria-haspopup="true"
    aria-label={t("userLocation.notice.title")}
  >
    <CircleHelp aria-hidden="true" width={24} height={24} />
  </button>

  <p {...Astro.props}>
    <span>{t("userLocation.lastVisit")}</span>
    <span id="location-placeholder"></span>
  </p>
</div>

<div id="privacy-notice" class="hidden" aria-hidden="true">
  <span class="block text-base font-bold">
    {t("userLocation.notice.title")}
  </span>

  <p class="whitespace-pre-line text-pretty text-sm font-medium">
    {t("userLocation.notice.message")}
  </p>
</div>

<style is:global>
  .tippy-box[data-theme~="location"] .tippy-content {
    padding: 1rem;
  }
</style>
