---
import { Picture } from "astro:assets";
import { Icon } from "astro-icon/components";

import { Badge, Link } from "@components/base";
import { bento, email, github, linkedIn, resume } from "@lib/data/socials";

import avatar from "./assets/avatar.png";

// Retrieve the localized strings for the hero section.
const { translations } = Astro.locals;
const t = translations.sections.hero;
---

<section class="mx-auto max-w-screen-lg content-center px-4 xs:px-6 sm:px-8">
  <header
    class="relative flex flex-row-reverse flex-wrap-reverse justify-end sm:flex-nowrap [@media(width>=37rem)]:flex-row [@media(width>=37rem)]:justify-between"
  >
    <div>
      <h1 class="text-balance font-header">
        <span class="block text-4xl font-extrabold tracking-wide opacity-90"
          >{t.greeting}</span
        >
      </h1>

      <p
        class="mt-4 block text-2xl font-bold text-foreground/50"
        set:html={t.headline.content}
      />
    </div>

    <div
      class="-mt-2 mb-6 mr-10 aspect-square size-16 min-h-16 min-w-16 overflow-clip rounded-full bg-white object-cover xs:min-h-24 xs:min-w-24 sm:mb-0 md:-mt-4 md:min-h-28 md:min-w-28 lg:-mt-2 2xl:-mt-0 [@media(width>=37rem)]:mr-14"
    >
      <Picture
        class="relative right-0.5 top-0.5"
        src={avatar}
        alt="Avatar"
        loading="eager"
        formats={["avif", "webp", "png"]}
      />
    </div>
  </header>

  <div>
    <p
      class="mt-12 max-w-[58ch] text-balance text-left text-base text-foreground/65 xs:text-lg"
      set:html={t.introduction}
      data-hero-p
    />

    <div class="mt-8 @container">
      <div
        class="mt-2 flex flex-col items-center justify-center gap-y-4 @[25rem]:mt-0 @[25rem]:flex-row @[25rem]:justify-start"
      >
        <Badge
          hoverGlow
          class="w-fit select-none gap-3 whitespace-nowrap rounded-md px-2.5 py-1.5 text-sm @[25rem]:text-xs sm:px-4 sm:text-sm"
        >
          <span class="relative flex h-[0.7em] w-[0.7em]">
            <span
              class="absolute inline-flex h-full w-full animate-ping rounded-full bg-green-500 opacity-75 animate-duration-[1000ms]"
            ></span>
            <span
              class="relative inline-flex h-[0.7em] w-[0.7em] rounded-full bg-green-500"
            ></span>
          </span>
          <span>{t.statusLabel}</span>
        </Badge>

        <span
          class="inline-block h-0.5 w-1/2 bg-muted-foreground/50 @[25rem]:ml-4 @[25rem]:mr-2 @[25rem]:h-6 @[25rem]:w-0.5 @[36rem]:h-8"
        ></span>

        <ul class="flex gap-x-2">
          {
            [linkedIn, github, email, resume, bento].map(
              ({ href, i18nKey, iconKey }) => {
                const translatedLabel = translations.socials[i18nKey];
                return (
                  <li
                    class:list={[
                      "rounded-lg text-foreground/80 transition duration-200",
                      "hover:bg-accent hover:text-accent-foreground/80",
                    ]}
                  >
                    <Link
                      {href}
                      label={`${translatedLabel}`}
                      targetBlank
                      withTooltip={{
                        content: `${translatedLabel}`,
                        placement: "bottom",
                      }}
                    >
                      <Icon
                        name={iconKey}
                        class="box-content size-6 p-2 text-current sm:size-7 md:size-8"
                      />
                    </Link>
                  </li>
                );
              },
            )
          }
        </ul>
      </div>
    </div>
  </div>
</section>

<style>
  [data-hero-p] {
    /** If pretty is supported it will override "balance". */
    text-wrap: balance;
    text-wrap: pretty;
  }

  :global([data-hero-p] > b) {
    color: theme("colors.foreground / 0.75");
  }
</style>
