---
import { Picture } from "astro:assets";
import { Icon } from "astro-icon/components";
import { Badge, Link } from "@components/base";

import { email, github, linkedIn } from "@lib/data/socials";
import { getTranslations } from "@modules/i18n";

import avatar from "./assets/avatar.png";

// Retrieve the localized strings for the hero section.
const { locale } = Astro.locals;
const translations = getTranslations(locale);
const t = translations.sections.hero;
---

<section class="mx-auto max-w-screen-lg content-center px-4 xs:px-6">
  <header
    class="relative flex flex-row-reverse flex-wrap-reverse justify-end sm:flex-nowrap [@media(width>=37rem)]:flex-row [@media(width>=37rem)]:justify-between"
  >
    <div>
      <h1 class="text-balance font-header">
        <span class="block text-4xl font-extrabold tracking-wide opacity-90"
          >{t.greeting}</span
        >
      </h1>

      <p
        class="mt-4 block min-h-[2lh] text-lg font-bold text-foreground/50"
        set:html={t.headline.content}
      />
    </div>

    <div
      class="-mt-2 mb-6 mr-10 aspect-square size-16 overflow-clip rounded-full bg-white object-cover xs:size-24 sm:mb-0 md:-mt-4 md:size-28 lg:-mt-2 2xl:-mt-0 [@media(width>=37rem)]:mr-14"
    >
      <Picture
        class="relative right-0.5 top-0.5"
        src={avatar}
        alt="Avatar"
        formats={["avif", "webp", "png"]}
      />
    </div>
  </header>

  <div>
    <p
      class="mt-4 max-w-[58ch] text-balance text-left text-base text-foreground/65 xs:text-lg"
      set:html={t.introduction}
      data-hero-p
    />

    <div
      class="mt-8 flex flex-col flex-wrap items-center justify-center gap-y-4 xs:flex-row [@media(width>=335px)]:flex-row [@media(width>=37rem)]:justify-start"
    >
      <Badge
        hoverGlow
        class="w-fit select-none gap-3 whitespace-nowrap rounded-md px-2.5 py-1.5 text-xs sm:px-4 sm:text-sm"
      >
        <span class="relative flex h-[0.7em] w-[0.7em]">
          <span
            class="absolute inline-flex h-full w-full animate-ping rounded-full bg-green-500 opacity-75 animate-duration-[1000ms]"
          ></span>
          <span
            class="relative inline-flex h-[0.7em] w-[0.7em] rounded-full bg-green-500"
          ></span>
        </span>
        <span>{t.statusLabel}</span>
      </Badge>

      <span
        class="ml-2 mr-1 hidden text-3xl font-bold text-muted xs:ml-4 xs:mr-2 [@media(width>=335px)]:inline-block"
        >{"|"}</span
      >

      <ul class="flex gap-x-2">
        {
          [linkedIn, github, email].map(({ href, i18nKey, iconKey }) => {
            const translatedLabel = translations.socials[i18nKey];
            return (
              <li
                class:list={[
                  "rounded-lg text-foreground/80 transition duration-200",
                  "hover:bg-accent hover:text-accent-foreground/80",
                ]}
              >
                <Link
                  {href}
                  label={`${translatedLabel}`}
                  targetBlank
                  withTooltip={{
                    content: `${translatedLabel}`,
                    placement: "bottom",
                  }}
                >
                  <Icon
                    name={iconKey}
                    class="box-content size-6 p-2 text-current sm:size-7 md:size-8"
                  />
                </Link>
              </li>
            );
          })
        }
      </ul>
    </div>
  </div>
</section>

<style>
  [data-hero-p] {
    /** If pretty is supported it will override "balance". */
    text-wrap: balance;
    text-wrap: pretty;
  }

  :global([data-hero-p] > b) {
    color: theme("colors.foreground / 0.75");
  }
</style>
