---
import type { HTMLAttributes } from "astro/types";
import { Icon } from "astro-icon/components";

import { getFileIconForSkill, skills } from "../lib/data";
import type { SkillName } from "../lib/types";

export type Props = HTMLAttributes<"article"> & {
  skill: SkillName;
  fileName?: string;
};

const { skill, fileName = "example-code", ...articleProps } = Astro.props;
const skillData = skills.find((s) => s.name === skill)!;

const snippets = await Astro.glob("../lib/snippets/*.md");
const snippet = snippets.find((s) => s.file.endsWith(`${skillData.key}.md`));
---

<article {...articleProps}>
  <header
    class="relative grid h-12 grid-cols-3 items-center overflow-clip rounded-t-md px-4 py-2"
  >
    <div class="absolute inset-0 -z-10 size-full bg-[#0b0e14] brightness-150">
    </div>
    <div class="flex items-center gap-2 *:size-3 *:rounded-full">
      <div class="border border-[#E14640] bg-[#FF6057]"></div>
      <div class="border border-[#DFA123] bg-[#FFBD2E]"></div>
      <div class="border border-[#1DAD2B] bg-[#27C93F]"></div>
    </div>
    <div class="flex items-center justify-center gap-2">
      <Icon
        class="size-[1.4em]"
        name={getFileIconForSkill(skill) ?? "lucide:ban"}
      />
      <p class="text-xs font-medium text-accent-foreground/70 sm:text-sm">
        {fileName}{"."}{skillData.fileExtension}
      </p>
    </div>
  </header>
  <hr class="opacity-60" />

  <div class="rounded-b-md bg-[#0b0e14] p-4 font-mono text-xs sm:text-sm">
    <Fragment set:html={snippet?.compiledContent()} />
  </div>
</article>
