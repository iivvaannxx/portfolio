---
import type { HTMLAttributes } from "astro/types";
import { Picture } from "astro:assets";
import capitalize from "just-capitalize";

import { Link } from "@components/base";

import { education } from "../lib/data";
import graduationCapEmoji from "../assets/emojis/graduation-cap.png";

type Props = HTMLAttributes<"article">;

const { locale, translations } = Astro.locals;
const t = translations.sections.about.bento.education;

const formatter = new Intl.DateTimeFormat(locale, {
  month: "long",
  year: "numeric",
});
---

<article {...Astro.props}>
  <header class="flex items-center gap-4 font-header text-xl font-bold">
    <Picture
      src={graduationCapEmoji}
      alt={t.iconAlt}
      formats={["avif", "webp", "png"]}
      class="size-[1.5em]"
    />

    <h3 class="mt-2 capitalize">{t.title}</h3>
  </header>

  <ul class="mt-6">
    {
      education.map((item) => {
        const { startDate, endDate } = item;
        const start = capitalize(formatter.format(startDate));
        const end = capitalize(formatter.format(endDate));

        return (
          <li>
            <Link
              href={item.url(locale)}
              label={item.title(locale)}
              class="text-balance font-sans text-lg font-bold transition duration-200 group-focus-within:text-primary lg:hover:text-primary"
              targetBlank
              withExternalLinkArrow
            >
              <span>{item.title(locale)}</span>
            </Link>

            <div class="mt-2 text-balance text-base font-semibold text-muted-foreground/80 transition-colors duration-200">
              <span>{item.location(locale)}</span>
              <span class="opacity-50">{" | "}</span>
              <span>
                <time
                  datetime={`${startDate.getFullYear()}-${startDate.getMonth() + 1}`}
                >
                  {start}
                </time>
                {" - "}
                <time
                  datetime={`${endDate.getFullYear()}-${endDate.getMonth() + 1}`}
                >
                  {end}
                </time>
              </span>
            </div>

            <p
              data-education-description
              class="mt-8 text-pretty text-base text-foreground/80 lg:max-w-[60ch]"
              set:html={item.description(locale)}
            />
          </li>
        );
      })
    }
  </ul>
</article>

<style>
  :global([data-education-description] a) {
    text-decoration: underline;
    text-decoration-color: theme("colors.primary.DEFAULT");
    text-underline-offset: 0.15em;
  }
</style>
