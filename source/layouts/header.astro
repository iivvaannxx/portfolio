---
import Hamburguer from "@app/modules/navigation/components/hamburguer.astro";

import Link from "@app/components/base/link.astro";
import { sections } from "@app/modules/navigation/lib/sections";
import { getTranslations } from "@app/modules/i18n/lib/translations";
import { Icon } from "astro-icon/components";
import { socials } from "@app/assets/data/socials";

const translations = getTranslations(Astro.locals.locale);
const t = translations.sections;
---

<header
  class:list={[
    "sticky inset-x-0 top-0 z-50 h-header w-full bg-background",
    "lg:h-header",
  ]}
>
  <nav
    class:list={[
      "pointer-events-none absolute inset-x-0 flex min-h-header w-full flex-col items-center justify-start overflow-hidden border-b border-border bg-background/85 backdrop-blur-2xl",
      "lg:container lg:pointer-events-auto lg:static lg:mx-auto lg:h-header lg:flex-row lg:justify-between lg:px-8",
    ]}
  >
    <div
      class:list={[
        "flex min-h-header w-full items-center justify-between gap-2 px-8",
        "sm:container sm:mx-auto",
        "lg:container-none lg:mx-0 lg:w-1/6 lg:justify-start lg:px-0",
      ]}
    >
      <span class="text-base font-black uppercase xs:text-xl">Ivan Porto</span>
      <Hamburguer
        id="navmenu-toggle"
        class="pointer-events-auto lg:hidden"
      />
    </div>

    <ul
      id="section-links"
      class:list={[
        "flex h-full w-max flex-col items-center justify-center gap-12 px-8 font-medium uppercase",
        "lg:h-auto lg:w-auto lg:grow lg:flex-row lg:justify-center lg:gap-6",
      ]}
    >
      {
        sections.map(({ name, icon }) => (
          <li>
            <Link
              class="inline-flex font-sans text-4xl font-bold tracking-wider lg:text-base lg:font-semibold lg:tracking-normal"
              href={`#${t[name].id}`}
              label={name}
            >
              <Icon
                name={icon}
                class="mr-4 xs:mr-8 lg:hidden"
              />
              <span>{t[name].name}</span>
            </Link>
          </li>
        ))
      }
    </ul>

    <div
      class:list={[
        "flex w-full items-center justify-between gap-6 px-8 py-4 text-lg",
        "lg:w-1/6 lg:justify-end",
      ]}
    >
      <span class="font-medium">ENG</span>
      <ul class="flex w-full justify-center gap-x-8 lg:hidden">
        {
          socials.map(({ href, i18nKey, iconKey }) => {
            const translatedLabel = t[i18nKey] as string;
            return (
              <li>
                <Link
                  {href}
                  label={translatedLabel}
                  withTooltip
                  targetBlank
                >
                  <Icon
                    name={iconKey}
                    fill="white"
                    width={28}
                    height={28}
                  />
                </Link>
              </li>
            );
          })
        }
      </ul>
      <Icon
        name="lucide:sun"
        class="size-[1.2em]"
      />
    </div>
  </nav>

  <hr
    id="header-separator"
    class="opacity-1 relative top-[calc(var(--top-header)-1px)] lg:-top-px"
  />
</header>

<style is:global>
  /** Ensure the body doesn't respond to pointer events so you can't interact with the content below. */
  body:has(#navmenu-toggle[aria-pressed="true"]) {
    overflow: hidden;
    pointer-events: none;
    user-select: none;
  }

  /** But override it for the navmenu so you can interact as expected. */
  nav:has(#navmenu-toggle[aria-pressed="true"]) {
    pointer-events: auto;
    user-select: auto;
  }
</style>

<style>
  #section-links a {
    color: theme("colors.foreground");
    opacity: 0.7;
  }

  #section-links a.active {
    opacity: 1;
  }

  nav,
  nav > :is(ul) {
    transition: height 0.3s ease-in-out;
    overflow: hidden;
  }

  nav:has(#navmenu-toggle[aria-pressed="true"]) {
    height: theme("height.screen-safe");

    & > :is(ul) {
      height: theme("height.screen-safe");
    }
  }

  nav:has(#navmenu-toggle[aria-pressed="false"]) {
    height: theme("height.header");

    & > :is(ul) {
      height: theme("height.header");
    }
  }
</style>

<!-- <style>
  hr#header-separator {
    animation: fade-in linear both;
    animation-timeline: scroll(root);
    animation-range: 0px theme("height.main");
  }

  @keyframes fade-in {
    to {
      opacity: 1;
    }
  }
</style>
 -->
